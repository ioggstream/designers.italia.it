version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
    steps:
      - checkout

      #
      # Download and cache Ruby dependencies
      #
      - restore_cache:
          keys:
            - dependencies-ruby-{{ checksum "Gemfile.lock" }}
            - dependencies-ruby-
      - run:
          name: Ruby dependencies
          command: bundle install
      - save_cache:
          key: v1-dependencies-ruby-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      #
      # Download and cache node dependencies
      #
      - restore_cache:
          keys:
          - dependencies-node-{{ checksum "yarn.lock" }}
          - dependencies-node-
      - run:
          name: Node dependencies
          command: yarn install
      - save_cache:
          key: dependencies-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn

      # Build the site
      - run:
          name: Build
          command: npm run build

      # Test the site
      - run:
          name: Test with HTML Proofer
          command: npm run test
  deploy:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
    environment:
      JEKYLL_ENV: production
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
    steps:
      - checkout

      # Manage rsync:
      #   SSH_KNOWN_HOSTS is populated with the output of
      #   ssh-keyscan $REMOTEHOST | base64.
      - run: mkdir -p ~/.ssh
      - run: echo $SSH_KNOWN_HOSTS | base64 -d >> ~/.ssh/known_hosts
      - run: which rsync || sudo apt-get install rsync

      #
      # Download and cache Ruby dependencies
      #
      - restore_cache:
          keys:
            - dependencies-ruby-{{ checksum "Gemfile.lock" }}
            - dependencies-ruby-
      - run:
          name: Ruby dependencies
          command: bundle install
      - save_cache:
          key: v1-dependencies-ruby-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      #
      # Download and cache node dependencies
      #
      - restore_cache:
          keys:
          - dependencies-node-{{ checksum "yarn.lock" }}
          - dependencies-node-
      - run:
          name: Node dependencies
          command: yarn install
      - save_cache:
          key: dependencies-node-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn

      # Build the site
      - run:
          name: Build
          command: yarn run build

      # Test the site
      - run:
          name: Test with HTML Proofer
          command: yarn run test

      # Deploy the site
      - run:
          name: Deploy to production
          command: yarn run deploy

      - store_artifacts:
          path: _site

workflows:
  version: 2
  test:
      jobs:
        - test:
            filters:
              branches:
                ignore:
                  - master
  deploy:
      jobs:
        - deploy:
            filters:
              branches:
                only:
                  - master
